@using EligereES.Models.DB
@model (Person, Dictionary<Guid, Election>, int, Dictionary<PollingStationCommission, List<PollingStationCommissioner>>)

@{
    var (p, e, ae, l) = Model;
    var available = (bool)ViewData["available"];
}

<script type="text/javascript">
    function GoRecognize() {
        document.location = '@(Url.Content("~"))/PSCommission/Identify/' + $('#cfvoter').val();
    }

    var completionid = null;
    function selectPerson(tgt, ptxt, phid, id, dn) {
        $('#' + tgt).html('');
        $('#' + ptxt).val(dn);
        if (phid) $('#' + phid).val(id);
    }
    function completeVoter(val, tgt, ptxt, phid) {
        if (completionid) clearTimeout(completionid);
        if (val != null && val.trim() == '') {
            $('#' + tgt).html('');
            return;
        }
        completionid = setTimeout(() => {
            completionid = null;
            $.ajax({
                url: '@(Url.Content("~"))/api/v1.0/People/?search=' + encodeURIComponent(val),
                method: 'GET'
            }).done((v) => {
                $('#' + tgt).html('');
                var content = '<table class="table table-hover"><tbody>';
                for (i = 0; i < Math.min(v.length, 5); i++) {
                    var qphid = phid ? "'" + phid + "'" : "null";
                    var completion = v[i].publicId;
                    content += '<tr><td style="cursor: default" onclick="selectPerson(\'' + tgt + '\', \'' + ptxt + '\', ' + qphid + ', \'' + v[i].id + '\', \'' + completion + '\')">' + v[i].firstName + ' ' + v[i].lastName + ' (' + v[i].publicId + ')</td></tr>';
                }
                content += '</tbody></table>';
                if (v.length > 0)
                  $('#' + tgt).html(content);
            })
        }, 700);
    }

    function setAvailabilityState(state) {
        $.ajax({
            url: '@(Url.Content("~"))/api/v1.0/PSCommission/StaffAvailability/?available=' + encodeURIComponent(state),
            method: 'PUT'
        }).done((v) => {
            $('#availableSwitch').prop("checked", v);
        })
    }
</script>
<div class="text-right">
    @p.FirstName @p.LastName
</div>
<div class="text-center" style="margin-bottom: 60px;">
    <h1 class="display-4">Commissione di seggio</h1>
</div>

<div class="container">
    @if (ae > 0)
    {
    <div class="row">
        <div class="input-group col-1 offset-10">
            <div class="custom-control custom-switch">
                <input type="checkbox" class="custom-control-input" name="availability" id="availableSwitch" @(available ? "checked=\"\"" : "")  onchange="setAvailabilityState(this.checked)">
                <label class="custom-control-label" for="availableSwitch">Disponibile</label>
            </div>
        </div>
        <div class="input-group mb-3 w-50 col-6 offset-3">
            <input type="text" class="form-control" autocomplete="off" placeholder="Cerca elettore..." id="cfvoter" aria-label="Ricerca dell'elettore" aria-describedby="basic-addon2" onkeyup="completeVoter(this.value, 'completionlist', 'cfvoter', null)">
            <div class="input-group-append">
                <button class="btn btn-outline-secondary" type="button" onclick="GoRecognize()">Riconosci</button>
            </div>
        </div>
    </div>
        <div id="completionlist" class="position-relative col-6 offset-3"></div>

        <!--Accordion wrapper-->
        <div class="accordion md-accordion" id="accordionEx" role="tablist" aria-multiselectable="true">

            <!-- Accordion card -->
            <div class="card">

                <!-- Card header -->
                <div class="card-header" role="tab" id="headingOne1">
                    <a class="collapsed" data-toggle="collapse" data-parent="#accordionEx" href="#collapseOne1" aria-expanded="false"
                       aria-controls="collapseOne1">
                        <h5 class="mb-0">
                            Elezioni<i class="fas fa-angle-down rotate-icon"></i>
                        </h5>
                    </a>
                </div>

                <!-- Card body -->
                <div id="collapseOne1" class="collapse" role="tabpanel" aria-labelledby="headingOne1"
                     data-parent="#accordionEx">
                    <ul>
                        @foreach (var psc in l.Keys.OrderBy(v => e[v.ElectionFk].PollStartDate).ThenBy(v => e[v.ElectionFk].Name))
                        {
                            @if (e[psc.ElectionFk].Active)
                            {
                                <li>
                                    @psc.Location 
                                    <br/>
                                    @if (psc.DigitalLocation != null)
                                    {<a href="@psc.DigitalLocation" target="_blank"><em>@e[psc.ElectionFk].Name</em></a>}
                                else
                                {<span><em>@e[psc.ElectionFk].Name</em></span>}
                                </li>
                            }
                        }
                    </ul>
                </div>

            </div>
        </div>
        <!-- Accordion wrapper -->
    }
    else
    {
        <p>Non ci sono seggi aperti ecco le prossime elezioni.</p>
        <!--Accordion wrapper-->
        <div class="accordion md-accordion" id="accordionEx" role="tablist" aria-multiselectable="true">

            <!-- Accordion card -->
            <div class="card">

                <!-- Card header -->
                <div class="card-header" role="tab" id="headingOne1">
                    <a data-toggle="collapse" data-parent="#accordionEx" href="#collapseOne1" aria-expanded="true"
                       aria-controls="collapseOne1">
                        <h5 class="mb-0">
                            Elezioni<i class="fas fa-angle-down rotate-icon"></i>
                        </h5>
                    </a>
                </div>

                <!-- Card body -->
                <div id="collapseOne1" class="collapse show" role="tabpanel" aria-labelledby="headingOne1"
                     data-parent="#accordionEx">
                    <ul>
                        @foreach (var psc in l.Keys.OrderBy(v => e[v.ElectionFk].PollStartDate).ThenBy(v => e[v.ElectionFk].Name))
                        {
                        <li>
                            @psc.Location
                            <br/>
                            <em>@e[psc.ElectionFk].Name</em> [@e[psc.ElectionFk].PollStartDate - @e[psc.ElectionFk].PollEndDate]
                        </li>
                        }
                    </ul>
                </div>

            </div>
        </div>
        <!-- Accordion wrapper -->
    }
</div>
