@using System.Text.Json
@model (string, VoteInformation)

@{
    ViewData["Title"] = "Scheda elettorale";
    var (tickets, info) = Model;
}

<div class="modal" id="voteResult">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Vote result</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <span id="voteMessage"></span>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal" id="askVoteDialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Inserire voto nell'urna sicura</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="askVoteText">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" onclick="castVote()">Inserire il voto</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="text-center offset-2 col-8">
    <h3 class="display-4" style="font-size: 1.4rem;"><i>scheda elettorale</i><br /><span id="electionName"></span></h3>
    <div class="container">
        <form id="voteData">
            <div class="form-group text-left offset-2 col-8">
                <input type="hidden" name="tickets" value="@tickets" />
                <input type="hidden" name="election" id="election" />
                <div class="custom-control custom-radio">
                    <input type="radio" id="schedaBianca" name="ballotType" value="emptyBallot" class="custom-control-input" style="margin-top: 16px;">
                    <label class="custom-control-label" for="schedaBianca">Scheda bianca</label>
                </div>
                <div class="custom-control custom-radio">
                    <input type="radio" id="schedaNulla" name="ballotType" value="spoiledBallot" class="custom-control-input">
                    <label class="custom-control-label" for="schedaNulla">Scheda nulla</label>
                </div>
                <div class="custom-control custom-radio">
                    <input type="radio" id="vote" name="ballotType" value="castedBallot" class="custom-control-input">
                    <label class="custom-control-label" for="vote" id="numpref">Preferenza</label>
                    <input type="hidden" id="preferences" name="preferences" />
                    <div id="candidateSelection" class="custom-control" style="margin-top: 32px;">
                    </div>
                    <div id="additionalCandidateSelection" class="custom-control" style="margin-top: 25px;">
                    </div>
                </div>

            </div>
        </form>
        <hr />
        <button type="button" class="btn btn-primary" onclick="askVote()">Vota</button>
    </div>
</div>
<script type="text/javascript">
    var cardData = @{ WriteLiteral(JsonSerializer.Serialize<VoteInformation>(info)); };
    var candidates = {};

    function findElection(id) {
        for (var i = 0; i < cardData.ElectionDescription.contests.length; i++)
            if (cardData.ElectionDescription.contests[i].object_id == id)
                return cardData.ElectionDescription.contests[i];
        return null;
    }

    function checkNumVotes(num) {
        return ($('#candidateSelection >> input:checked').length <= num);        
    }

    function checkPartyNumVotes(num) {
        return ($('#candidateSelection >> input:checked').length == 1) && ($('.partylist-data >> input:checked').length <= num);
    }

    function generateCandidateList(election) {
        var hasCandidates = election.extensions.HasCandidates != "False";
        var candidateType = election.extensions.CandidatesType;
        var numvotes = election.votes_allowed;
        var selections = election.ballot_selections;
        var numsel = selections.length;
        var container = document.getElementById('candidateSelection');

        if (hasCandidates && candidateType == "Implicit") candidateType = "OnlyExplicit"; // Backward compatibility

        if ((hasCandidates && candidateType != "Party") || candidateType == "OnlyExplicit" || candidateType == "ImplicitAndExplicit") {
            if (numvotes == 1) {
                container.clean = function () {
                    $('#candidateSelection >> input').prop('checked', false);
                }
                container.readCandidates = function () {
                    var selected = [];
                    $.each($('#candidateSelection >> input:checked'), function () { selected.push($(this).val()) });
                    if (selected.length == 0) return null;
                    return selected;
                }
                container.isPartyElection = function () { return false; }

                var cont = '';
                var count = 0;
                var visibleCandidates = {};
                var availableCandidates = {};
                for (var i = 0; i < numsel; i++) {
                    var candidate = candidates[selections[i].candidate_id];
                    var ballotname = candidates[selections[i].candidate_id].ballot_name.text[0].value;
                    availableCandidates[ballotname] = true;
                    if (candidateType == "OnlyExplicit" || (candidateType == "ImplicitAndExplicit" && candidate.object_id[0] == '*')) {
                        count++;
                        visibleCandidates[ballotname] = true;
                        cont +=
                            '<div class="custom-control custom-radio">' +
                            '<input type="radio" id="candidate' + count + '" name="candidate' + count + '" value="' + ballotname + '" class="custom-control-input" />' +
                            '<label for= "candidate' + count + '" class= "custom-control-label" > ' + ballotname + '</label >' +
                            '</div>';
                    }
                }
                var panel = null;
                if (candidateType == "ImplicitAndExplicit") {
                    container.addCandidate = function () {
                        var cand = $('#addcandidate').val();
                        if (cand.trim() == '') {
                            alert('Scrivere il cognome e selezionare un candidato da aggiungere');
                            return;
                        }
                        if (!availableCandidates[cand]) {
                            alert('Candidato non valido, selezionarlo dalla tendina mentre si scrive');
                            return;
                        }
                        if (visibleCandidates[cand]) {
                            alert('Il candidato è già presente');
                            return;
                        }
                        visibleCandidates[cand] = true;
                        count++;
                        cont =
                            '<div class="custom-control custom-radio">' +
                            '<input type="radio" id="candidate' + count + '" name="candidate' + count + '" value="' + cand + '" class="custom-control-input" />' +
                            '<label for= "candidate' + count + '" class= "custom-control-label" > ' + cand + '</label >' +
                            '</div>';
                        $('#candidateSelection').html($('#candidateSelection').html() + cont)
                        $('#addcandidate').val('');
                    }
                    panel = '<div style="margin-top: 25px;" class="input-group">';
                    panel += '<input type="text" class="form-control" placeholder="Candidato" id="addcandidate" spellcheck="false" data-ms-editor="true" onclick="enableAndClear(\'candidate' + i + '\')" onkeyup="completeCandidate(this.value, \'addcompletionlist\', \'addcandidate\', null)">';
                    panel += '<div class="input-group-append"><button class="btn btn-outline-secondary" type = "button" onclick = "document.getElementById(\'candidateSelection\').addCandidate()" >+</button ></div >';
                    panel += '</div><div id="addcompletionlist" class="position-relative"></div>';
                }
                $('#candidateSelection').html(cont);
                if (panel) { $('#additionalCandidateSelection').html(panel); }
            } else {
                container.clean = function () {
                    $('#candidateSelection >> input').prop('checked', false);
                }
                container.readCandidates = function () {
                    var selected = [];
                    $.each($('#candidateSelection >> input:checked'), function () { selected.push($(this).val()) });
                    if (selected.length == 0) return null;
                    return selected;
                }
                container.isPartyElection = function () { return false; }

                var cont = '';
                var count = 0;
                var visibleCandidates = {};
                var availableCandidates = {};
                for (var i = 0; i < numsel; i++) {
                    var candidate = candidates[selections[i].candidate_id];
                    var ballotname = candidate.ballot_name.text[0].value;
                    availableCandidates[ballotname] = true;
                    if (candidateType == "OnlyExplicit" || (candidateType == "ImplicitAndExplicit" && candidate.object_id[0] == '*')) {
                        count++;
                        visibleCandidates[ballotname] = true;
                        cont +=
                            '<div class="custom-control custom-radio">' +
                            '<input type="checkbox" id="candidate' + count + '" name="candidate' + count + '" value="' + ballotname + '" class="custom-control-input" onchange="if (!checkNumVotes(' + numvotes + ')) { $(this).prop(\'checked\', false); }" />' +
                            '<label for="candidate' + count + '" class="custom-control-label" >' + ballotname + '</label>' +
                            '</div>';
                    }
                }
                var panel = null;
                if (candidateType == "ImplicitAndExplicit") {
                    container.addCandidate = function () {
                        var cand = $('#addcandidate').val();
                        if (cand.trim() == '') {
                            alert('Scrivere il cognome e selezionare un candidato da aggiungere');
                            return;
                        }
                        if (!availableCandidates[cand]) {
                            alert('Candidato non valido, selezionarlo dalla tendina mentre si scrive');
                            return;
                        }
                        if (visibleCandidates[cand]) {
                            alert('Il candidato è già presente');
                            return;
                        }
                        visibleCandidates[cand] = true;
                        count++;
                        cont =
                            '<div class="custom-control custom-radio">' +
                            '<input type="checkbox" id="candidate' + count + '" name="candidate' + count + '" value="' + cand + '" class="custom-control-input added-candidate" onchange="if (!checkNumVotes(' + numvotes + ')) { $(this).prop(\'checked\', false); }" />' +
                            '<label for="candidate' + count + '" class="custom-control-label" >' + cand + '</label>' +
                            '</div>';
                        $('#candidateSelection').html($('#candidateSelection').html() + cont)
                        $('#addcandidate').val('');
                    }
                    panel = '<div style="margin-top: 25px;" class="input-group">';
                    panel += '<input type="text" class="form-control" placeholder="Candidato" id="addcandidate" spellcheck="false" data-ms-editor="true" onclick="enableAndClear(\'candidate' + i + '\')" onkeyup="completeCandidate(this.value, \'addcompletionlist\', \'addcandidate\', null)">';
                    panel += '<div class="input-group-append"><button class="btn btn-outline-secondary" type = "button" onclick = "document.getElementById(\'candidateSelection\').addCandidate()" >+</button ></div >';
                    panel += '</div><div id="addcompletionlist" class="position-relative"></div>';
                }
                $('#candidateSelection').html(cont);
                if (panel) { $('#additionalCandidateSelection').html(panel); }
            }
        } else if (candidateType == "Party") {
            container.clean = function () {
                $('#candidateSelection >> input').prop('checked', false);
                $('.partylist-data >> input').prop('checked', false);
            }
            container.readCandidates = function () {
                var selected = [];
                $.each($('#candidateSelection >> input:checked'), function () { selected.push($(this).val()) });
                $.each($('.partylist-data >> input:checked'), function () { selected.push($(this).val()) });
                if (selected.length == 0) return null;
                return selected;
            }
            container.isPartyElection = function () { return true; }

            var cont = '';
            var count = 0;
            var listcount = 0;
            var firstparty = true;
            // Assumption: candidates are grouped by party
            for (var i = 0; i < numsel; i++) {
                var candidate = candidates[selections[i].candidate_id];
                var ballotname = candidate.ballot_name.text[0].value;
                count++;
                if (candidate.object_id[0] != '*') {
                    if (!firstparty) {
                        cont += '</div></div>'
                    } else {
                        firstparty = false;
                    }
                    listcount++;
                    cont +=
                        '<div class="custom-control custom-radio">' +
                        '<input type="radio" id="party' + count + '" name="party" value="' + ballotname + '" class="custom-control-input" onchange="$(\'.partylist-data >> input\').prop(\'checked\', false); $(\'#candidateSelection >> input\').prop(\'checked\', false); $(\'.partylist-data\').hide(); $(\'#partylist' + count + '\').show(); $(\'#party' + count + '\').prop(\'checked\', true); " />' +
                        '<label for="party' + count + '" class="custom-control-label" >' + ballotname + '</label>' +
                        '<div id="partylist' + count + '" class="partylist-data" style="display: none">';
                } else {
                    var inptype = 'checkbox';
                    var inpname = 'candidate' + count;
                    if (numvotes == 1) {
                        inptype = 'radio';
                        inpname = 'partycandidate' + listcount;
                    }
                    cont +=
                        '<div class="custom-control custom-radio">' +
                        '<input type="' + inptype + '" id="candidate' + count + '" name="' + inpname + '" value="' + ballotname + '" class="custom-control-input" onchange="if (!checkPartyNumVotes(' + numvotes + ')) { $(this).prop(\'checked\', false); }" />' +
                        '<label for="candidate' + count + '" class="custom-control-label" >' + ballotname.substring(ballotname.lastIndexOf('-') + 2) + '</label>' +
                        '</div>';
                }
            }
            cont += '</div></div>';
            $('#candidateSelection').html(cont);
        } else {
            container.clean = function () {
                $('#candidateSelection > input').val('');
            }
            container.readCandidates = function () {
                var selected = [];
                $.each($('#candidateSelection > input'), function () { if ($(this).val().trim().length > 0) selected.push($(this).val()) });
                if (selected == 0) return null;

                return selected;
            }
            container.isPartyElection = function () { return false; }
            var cont = '';
            for (var i = 0; i < numvotes; i++) {
                cont += '<input type="text" class="form-control" placeholder="Candidato" name="candidate'+i+'" id="candidate'+i+'" spellcheck="false" data-ms-editor="true" onclick="enableAndClear(\'candidate'+i+'\')" onkeyup="completeCandidate(this.value, \'completionlist'+i+'\', \'candidate'+i+'\', null)">';
                cont += '<div id="completionlist'+i+'" class="position-relative"></div>';
            }

            $('#candidateSelection').html(cont);
        }
    }

    window.addEventListener('load', () => {
        if (cardData.UsedTickets.length > 0) {
            for (var i = 0; i < cardData.UsedTickets.length; i++) {
                var t = cardData.UsedTickets[i];
                alert('Il voto per "' + t.ElectionName + '" è già stato inserito nell\'urna');
            }
        }

        for (var i = 0; i < cardData.ElectionDescription.candidates.length; i++) {
            candidates[cardData.ElectionDescription.candidates[i].object_id] = cardData.ElectionDescription.candidates[i];
        }

        $('#candidateSelection').hide();
        $('#additionalCandidateSelection').hide();
        $('#schedaBianca').change(radioVoteChanged)
        $('#schedaNulla').change(radioVoteChanged)
        $('#vote').change(radioVoteChanged)
        UseTicket();
    });

    function enableAndClear(tgt) {
        $('#' + tgt).val('');
    }

    function clearContainer() {
        var container = document.getElementById('candidateSelection');
        if (container.clean)
            container.clean();
    }

    function radioVoteChanged() {
        if ($('#vote').is(':checked')) {
            $('#candidateSelection').show();
            $('#additionalCandidateSelection').show();
        } else {
            $('#candidateSelection').hide();
            $('#additionalCandidateSelection').hide();
            clearContainer();
        }
    }

    function UseTicket() {
        if (cardData.AvailableTickets.length == 0) {
            document.location = '@(Url.Content("~"))/Vote/VoteConclusion';
            return;
        }
        var ticket = cardData.AvailableTickets[0];
        var election = findElection(ticket.ElectionId);
        $('#numpref').html(election.votes_allowed == 1 ? 'Preferenza' : election.votes_allowed + ' preferenze');
        $('#electionName').html(election.name);
        $('#schedaBianca').prop('checked', false);
        $('#schedaNulla').prop('checked', false);
        $('#vote').prop('checked', false);
        $('#election').val(ticket.ElectionId);
        generateCandidateList(election);
        $('#candidateSelection').hide();
        clearContainer();
    }

    var completionid = null;
    function selectPerson(tgt, ptxt, phid, id, dn) {
        $('#' + tgt).html('');
        $('#' + ptxt).val(dn);
        if (phid) $('#' + phid).val(id);
    }

    function stuffQuote(s) {
        return s.replace('\'', '\\\'');
    }

    function completeCandidate(val, tgt, ptxt, phid) {
        if (completionid) clearTimeout(completionid);
        completionid = setTimeout(() => {
            completionid = null;
            var election = findElection($('#election').val())
            var v = election.ballot_selections.filter(c => candidates[c.candidate_id].ballot_name.text[0].value.toUpperCase().indexOf(val.toUpperCase()) > -1);
            $('#' + tgt).html('');
            if (val.length == 0) return;
            var content = '<table class="table table-hover"><tbody>';
            for (i = 0; i < Math.min(v.length, 5); i++) {
                var qphid = phid ? "'" + phid + "'" : "null";
                var completion = candidates[v[i].candidate_id].ballot_name.text[0].value;
                content += '<tr><td style="cursor: default" onclick="selectPerson(\'' + tgt + '\', \'' + ptxt + '\', ' + qphid + ', \'' + v[i].id + '\', \'' + stuffQuote(completion) + '\')">' + completion + '</td></tr>';
            }
            content += '</tbody></table>';
            if (v.length > 0)
                $('#' + tgt).html(content);
        }, 700);
    }

    function askVote() {
        var election = findElection($('#election').val())
        // Check candidato valido
        var txt = 'Elezione: <em>' + election.name + '</em><br/>';
        if ($('#schedaBianca').is(':checked')) {
            txt += '<b>Scheda bianca</b>';
        } else if ($('#schedaNulla').is(':checked')) {
            txt += '<b>Scheda annullata</b>';
        } else if ($('#vote').is(':checked')) {
            var container = document.getElementById('candidateSelection');
            var ret = container.readCandidates();
            if (ret == null) {
                alert('Non si è effettuata alcuna selezione nella scheda!');
                return;
            }            
            txt += ret.join('<br/>');
        } else {
            alert('Non si è effettuata alcuna selezione nella scheda!');
            return;
        }

        $('#askVoteText').html(txt);
        $('#askVoteDialog').modal('show');
    }
    function castVote() {
        var container = document.getElementById('candidateSelection');
        if ($('#vote').is(':checked')) {
            $('#preferences').val(JSON.stringify(container.readCandidates()));
        }
        $.ajax({
            type: 'post',
            url: '@(Url.Content("~"))/Vote/CastBallot',
            data: $('#voteData').serialize()
        }).done((v) => {
            $('#askVoteDialog').modal('hide');
            if (v.status == 200) {
                $('#voteMessage').html('Voto immesso nell\'urna')
                $('#voteResult').modal('show');
                var ticket = cardData.AvailableTickets.shift();
                cardData.UsedTickets.push(ticket);
                UseTicket();
            }
            else {
                $('#voteMessage').html(v.message)
                $('#voteResult').modal('show');
            }
        }).fail((v) => {
            $('#voteMessage').html('Errore nell\'inserimento del voto nell\'urna')
            $('#voteResult').modal('show');
        });
    }

</script>
